import { SignIn, SignInButton, SignOutButton, useUser } from '@clerk/nextjs';
import { type NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';

import { api } from '~/utils/api';
import type { RouterOutputs } from '~/utils/api';

import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import { LoadingPage } from '~/components/loading';
import { useState } from 'react';

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
    const { user } = useUser();

    const [input, setInput] = useState<string>('')

    const ctx = api.useContext();

    const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
        onSuccess: async () => {
            setInput('');
            await ctx.posts.getAll.invalidate();
        }
    });


	if (!user) return null;

	return (
		<div className="flex w-full gap-4">
			<Image
				src={user.profileImageUrl}
				alt={`${user.username} profile picture`}
				className="h-14 w-14 rounded-full"
				width={56}
				height={56}
				priority
			/>
			<input
                type="text"
                placeholder="Type some emojis!"
                className="w-full grow bg-transparent outline-none"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                disabled={isPosting}
            />
            <button onClick={() => mutate({ content: input })}>Post</button>
		</div>
	);
};

type PostWithUser = RouterOutputs['posts']['getAll'][number];

const PostView = (props: PostWithUser) => {
	const { post, author } = props;

	return (
		<div
			key={post.id}
			className="flex w-full gap-4 border-b border-slate-800 p-4"
		>
			<Image
				src={author.profilePicture}
				alt={author.username}
				className="h-14 w-14 rounded-full"
				width={56}
				height={56}
			/>
			<div className="flex flex-col">
				<div className="flex text-slate-300">
					<span className="font-semibold">@{author.username}</span>
					&nbsp; Â· &nbsp;
					<span className="font-thin">
						{dayjs(post.createdAt).fromNow()}
					</span>
				</div>
				<span className="text-2xl">{post.content}</span>
			</div>
		</div>
	);
};

const Feed = () => {
	const { data, isLoading: postLoading } = api.posts.getAll.useQuery();

	if (postLoading) return <LoadingPage />;
	if (!data) return <div>Something went wrong</div>;

	return (
		<div className="flex flex-col">
			{data.map((fullPost) => (
				<PostView {...fullPost} key={fullPost.post.id} />
			))}
		</div>
	);
};

const Home: NextPage = () => {
	const { isLoaded: userLoaded, isSignedIn } = useUser();

	// Start loading posts as soon as user is loaded
	api.posts.getAll.useQuery();

	// Return empoty div if user is not loaded
	if (!userLoaded) return <div />;

	return (
		<>
			<Head>
				<title>Chirp - Emoiji Messenger</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex h-screen justify-center">
				<div className="h-full w-full border-x border-x-slate-800 md:max-w-2xl">
					<div className="p- flex border-b border-slate-800 p-4">
						{!isSignedIn ? (
							<div className="flex justify-center">
								<SignInButton />
							</div>
						) : (
							<CreatePostWizard />
						)}
					</div>
					<Feed />
				</div>
			</main>
		</>
	);
};

export default Home;
